{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","tabHandler","useCallback","tab","id","selectedTab","useMemo","find","className","map","classNames","href","onClick","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaC,uBAAY,SAACC,GAC1BJ,IAAkBI,EAAIC,IACxBJ,EAAcG,KAEf,CAACJ,IAEEM,EAAcC,mBAClB,kBACER,EAAKS,MAAK,SAACJ,GAAD,OAAUA,EAAIC,KAAOL,MAAmBD,EAAK,KAEzD,CAACC,EAAeD,IAGlB,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKU,UAAU,gBAAf,SACE,6BACGV,EAAKW,KAAI,SAAAN,GAAG,OACX,oBAEEK,UAAWE,IAAW,CACpB,YAAaL,EAAYD,KAAOD,EAAIC,KAEtC,UAAQ,MALV,SAOE,mBACEO,KAAI,WAAMR,EAAIC,IACd,UAAQ,UACRQ,QAAS,kBAAMX,EAAWE,IAH5B,SAKGA,EAAIU,SAXFV,EAAIC,WAkBjB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAYS,cC9CRhB,EAAO,CAClB,CAAEM,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASlB,EAAK,IAApD,mBAAOO,EAAP,KAAoBY,EAApB,KAEA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBH,EAAYQ,SAGlC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeM,EAAYD,GAC3BJ,cAAeiB,QCtBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cc84b927.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { useCallback, useMemo } from 'react';\nimport { Tab } from '../../types';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string,\n  onTabSelected: (id: Tab) => void\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const tabHandler = useCallback((tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  }, [selectedTabId]);\n\n  const selectedTab = useMemo(\n    () => (\n      tabs.find((tab) => (tab.id === selectedTabId)) || tabs[0]\n    ),\n    [selectedTabId, tabs],\n  );\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active': selectedTab.id === tab.id,\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => tabHandler(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}